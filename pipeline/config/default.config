import nextflow.util.SysHelper

docker {
    enabled = true
    // Pass user's UID/GID and group IDs to Docker
    uid_and_gid = "-u \$(id -u):\$(id -g)"
    all_group_ids = "\$(for i in `id --real --groups`; do echo -n \"--group-add=\$i \"; done)"

    runOptions = "${uid_and_gid} ${all_group_ids}"
    }

params {
    max_cpus = SysHelper.getAvailCpus()
    max_memory = SysHelper.getAvailMemory()

    cache_intermediate_pipeline_steps = false
    save_intermediate_files = true

    ucla_cds = true

    blcds_registered_dataset = false

    // Pipeline tool versions
    delly_version = '0.9.1'
    manta_version = '1.6.0'
    bcftools_version = '1.12'
    vcftools_version = '0.1.16'
    rtgtools_version = '3.12'
    validate_version = '2.1.5'

    // Docker tool versions
    docker_image_delly = "blcdsdockerregistry/delly:${params.delly_version}"
    docker_image_bcftools = "blcdsdockerregistry/bcftools:${params.bcftools_version}"
    docker_image_manta = "blcdsdockerregistry/manta:${params.manta_version}"
    docker_image_rtgtools = "blcdsdockerregistry/rtg-tools:${params.rtgtools_version}"
    docker_image_vcftools = "blcdsdockerregistry/vcftools:${params.vcftools_version}"
    docker_image_validate = "blcdsdockerregistry/validate:${params.validate_version}"

    reference_fasta = "/hot/ref/reference/GRCh38-BI-20160721/Homo_sapiens_assembly38.fasta"
    // If an index is not explicitly specified for the reference FASTA, the pipeline will assume one exists in the same directory as the reference FASTA
    reference_fasta_index = ''
    reference_prefix = 'GRCh38-BI-20160721' // See https://confluence.mednet.ucla.edu/display/BOUTROSLAB/Data+storage+directory+structure+design#Datastoragedirectorystructuredesign-8.Referencegenome
  
    exclusion_file = "/hot/ref/tool-specific-input/Delly/GRCh38/human.hg38.excl.tsv"
    mappability_map = "/hot/ref/tool-specific-input/Delly/GRCh38/Homo_sapiens.GRCh38.dna.primary_assembly.fa.r101.s501.blacklist.gz"
    
    map_qual = 20 // min. paired-end (PE) mapping quality for Delly

    }

process {
    executor = 'local'
    echo = true
    cache = true
    }
