import nextflow.util.SysHelper

manifest {
	mainScript = 'call-gSV.nf'
	nextflowVersion = '>=20.07.1'
	author = 'Tim Sanders & Yael Berkovich'
	homePage = 'https://github.com/uclahs-cds/pipeline-call-gSV'
}

params {
	sample_name = ''
	input_bam = ''
	input_bam_index = ''
	reference_fasta = '/path/to/genome.fa'
	exclusion_file = ''
	output_dir = ''
}

process = {
	executor = 'local'
}

def node_cpus = SysHelper.getAvailCpus()
def node_mem  = SysHelper.getAvailMemory().toString()

if (node_cpus == 2 && node_mem == '3 GB') {
    includeConfig "${projectDir}/config/lowmem.config"
} else if (node_cpus == 72 && node_mem == '136.8 GB') {
    includeConfig "${projectDir}/config/midmem.config"
} else if (node_cpus == 64 && node_mem == '950 GB') {
    includeConfig "${projectDir}/config/execute.config"
} else {
    throw new Exception('ERROR: System resources not as expected, unable to assign resources.')
}

docker {
    enabled = true
}

trace {
    enabled = true
    file = "${params.output_dir}/trace.txt"
}

timeline {
    enabled = true
    file = "${params.output_dir}/timeline.html"
}

report {
    enabled = true
    file = "${params.output_dir}/report.html"
}